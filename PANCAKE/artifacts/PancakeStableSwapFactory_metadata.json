{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "swapContract",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					}
				],
				"name": "NewStableSwapPair",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "N_COINS",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenB",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_A",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_admin_fee",
						"type": "uint256"
					}
				],
				"name": "createSwapPair",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenB",
						"type": "address"
					}
				],
				"name": "getPairInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "swapContract",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "LPContract",
								"type": "address"
							}
						],
						"internalType": "struct PancakeStableSwapFactory.StableSwapPairInfo",
						"name": "info",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pairLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "swapPairContract",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"tutorialtoken-box-master/KNS/PANCAKE/PancakeStableSwapFactory.sol": "PancakeStableSwapFactory"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 10
		},
		"remappings": []
	},
	"sources": {
		"tutorialtoken-box-master/KNS/PANCAKE/PancakeStableSwap.sol": {
			"keccak256": "0x3a58202535a4960107510f4df427466f61449efe5f5c1d00ae491f7a0a1b0715",
			"license": "MIT",
			"urls": [
				"bzz-raw://9217e82a5962be3305dbbccc58d6eb835dc8bbda8db0d73b132b43022effb9fc",
				"dweb:/ipfs/QmS49okKkf4dS4ddu8DDsiRLuMo3DmoqTyYED7et3nSc4s"
			]
		},
		"tutorialtoken-box-master/KNS/PANCAKE/PancakeStableSwapFactory.sol": {
			"keccak256": "0x9c8b5c115a12166c60392d34dd99dcc00111553f9638b21ceca20e199bff0230",
			"license": "MIT",
			"urls": [
				"bzz-raw://23dec018469ab2463c035fcb7229dd404ff8bac778ea4fb039dc0a895e1c57b7",
				"dweb:/ipfs/QmXVHmcKpk3HoLJsXgbuPD7YHgBrTZpNthRaasYkjp8BXk"
			]
		}
	},
	"version": 1
}