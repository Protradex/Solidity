{
	"id": "f7f61b8d8954901719b246e4710e347e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"KNS/super/HasNoEther.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-07-11\r\n*/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity =0.8.13;\r\n\r\nimport \"./Ownable.sol\";\r\nimport \"../interface/IBEP20.sol\";\r\n\r\ncontract HasNoEther is Ownable {\r\n  /**\r\n   * @dev Transfer all Ether held by the contract to the owner.\r\n   */\r\n    function reclaimEther() external onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n  \r\n    function reclaimToken(address token,uint amount) external onlyOwner {\r\n        IBEP20(token).transfer(owner(),amount);\r\n    }\r\n}"
			},
			"KNS/interface/IBEP20.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-07-11\r\n*/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity =0.8.13;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n   */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n   */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n   */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n    * @dev Returns the token name.\r\n  */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n   */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"KNS/super/Ownable.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-07-11\r\n*/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity =0.8.13;\r\n\r\nimport \"./Context.sol\";\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"KNS/super/Context.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-07-11\r\n*/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity =0.8.13;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"KNS/interface/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KNS/interface/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"KNS/interface/IBEP20.sol\":{\"keccak256\":\"0x676d2985c77e38e8222282191f0e4bcbfab2fbfc6292a67d01ba28a52b68f6eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a086760176642fb98bf99685d56c2c51e114d989523ef34bc7d3fea5207c4ee9\",\"dweb:/ipfs/QmYCXZHXQdX4ZTKeyjXfMSBrNrqrU6cXcEdPYqKUVe8S3c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"KNS/super/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KNS/super/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"KNS/super/Context.sol\":{\"keccak256\":\"0xb404829888978c2da845daa1eda5bfd9d109ff6d5dcdc29348c2109ae0d34f3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203f5931ddd28501c18ab5b8665014b2f3126f3453cf93227e882fba4f614253\",\"dweb:/ipfs/QmXw55pgAKQTPBsQaPUYC4FSUrhZXzMpdMtAcRg61CAbuM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"KNS/super/HasNoEther.sol": {
				"HasNoEther": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reclaimEther",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "reclaimToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"reclaimEther()": {
								"details": "Transfer all Ether held by the contract to the owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"KNS/super/HasNoEther.sol\":191:556  contract HasNoEther is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"KNS/super/Ownable.sol\":447:479  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"KNS/super/Ownable.sol\":466:478  _msgSender() */\n  tag_5\n    /* \"KNS/super/Ownable.sol\":466:476  _msgSender */\n  shl(0x20, tag_6)\n    /* \"KNS/super/Ownable.sol\":466:478  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"KNS/super/Ownable.sol\":447:465  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"KNS/super/Ownable.sol\":447:479  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"KNS/super/HasNoEther.sol\":191:556  contract HasNoEther is Ownable {... */\n  jump(tag_8)\n    /* \"KNS/super/Context.sol\":162:260  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"KNS/super/Context.sol\":215:222  address */\n  0x00\n    /* \"KNS/super/Context.sol\":242:252  msg.sender */\n  caller\n    /* \"KNS/super/Context.sol\":235:252  return msg.sender */\n  swap1\n  pop\n    /* \"KNS/super/Context.sol\":162:260  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"KNS/super/Ownable.sol\":1838:2029  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"KNS/super/Ownable.sol\":1912:1928  address oldOwner */\n  0x00\n    /* \"KNS/super/Ownable.sol\":1931:1937  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"KNS/super/Ownable.sol\":1912:1937  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"KNS/super/Ownable.sol\":1957:1965  newOwner */\n  dup2\n    /* \"KNS/super/Ownable.sol\":1948:1954  _owner */\n  0x00\n  dup1\n    /* \"KNS/super/Ownable.sol\":1948:1965  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"KNS/super/Ownable.sol\":2012:2020  newOwner */\n  dup2\n    /* \"KNS/super/Ownable.sol\":1981:2021  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"KNS/super/Ownable.sol\":2002:2010  oldOwner */\n  dup2\n    /* \"KNS/super/Ownable.sol\":1981:2021  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"KNS/super/Ownable.sol\":1901:2029  {... */\n  pop\n    /* \"KNS/super/Ownable.sol\":1838:2029  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"KNS/super/HasNoEther.sol\":191:556  contract HasNoEther is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"KNS/super/HasNoEther.sol\":191:556  contract HasNoEther is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x61ce3529\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9f727c27\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"KNS/super/HasNoEther.sol\":428:553  function reclaimToken(address token,uint amount) external onlyOwner {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"KNS/super/Ownable.sol\":1219:1322  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"KNS/super/Ownable.sol\":568:655  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"KNS/super/HasNoEther.sol\":308:418  function reclaimEther() external onlyOwner {... */\n    tag_6:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"KNS/super/Ownable.sol\":1477:1678  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"KNS/super/HasNoEther.sol\":428:553  function reclaimToken(address token,uint amount) external onlyOwner {... */\n    tag_11:\n        /* \"KNS/super/Ownable.sol\":799:811  _msgSender() */\n      tag_25\n        /* \"KNS/super/Ownable.sol\":799:809  _msgSender */\n      tag_26\n        /* \"KNS/super/Ownable.sol\":799:811  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"KNS/super/Ownable.sol\":788:811  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"KNS/super/Ownable.sol\":788:795  owner() */\n      tag_27\n        /* \"KNS/super/Ownable.sol\":788:793  owner */\n      tag_15\n        /* \"KNS/super/Ownable.sol\":788:795  owner() */\n      jump\t// in\n    tag_27:\n        /* \"KNS/super/Ownable.sol\":788:811  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"KNS/super/Ownable.sol\":780:848  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"KNS/super/HasNoEther.sol\":514:519  token */\n      dup2\n        /* \"KNS/super/HasNoEther.sol\":507:529  IBEP20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"KNS/super/HasNoEther.sol\":530:537  owner() */\n      tag_32\n        /* \"KNS/super/HasNoEther.sol\":530:535  owner */\n      tag_15\n        /* \"KNS/super/HasNoEther.sol\":530:537  owner() */\n      jump\t// in\n    tag_32:\n        /* \"KNS/super/HasNoEther.sol\":538:544  amount */\n      dup4\n        /* \"KNS/super/HasNoEther.sol\":507:545  IBEP20(token).transfer(owner(),amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap3\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      pop\n        /* \"KNS/super/HasNoEther.sol\":428:553  function reclaimToken(address token,uint amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"KNS/super/Ownable.sol\":1219:1322  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n        /* \"KNS/super/Ownable.sol\":799:811  _msgSender() */\n      tag_40\n        /* \"KNS/super/Ownable.sol\":799:809  _msgSender */\n      tag_26\n        /* \"KNS/super/Ownable.sol\":799:811  _msgSender() */\n      jump\t// in\n    tag_40:\n        /* \"KNS/super/Ownable.sol\":788:811  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"KNS/super/Ownable.sol\":788:795  owner() */\n      tag_41\n        /* \"KNS/super/Ownable.sol\":788:793  owner */\n      tag_15\n        /* \"KNS/super/Ownable.sol\":788:795  owner() */\n      jump\t// in\n    tag_41:\n        /* \"KNS/super/Ownable.sol\":788:811  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"KNS/super/Ownable.sol\":780:848  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_30\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"KNS/super/Ownable.sol\":1284:1314  _transferOwnership(address(0)) */\n      tag_45\n        /* \"KNS/super/Ownable.sol\":1311:1312  0 */\n      0x00\n        /* \"KNS/super/Ownable.sol\":1284:1302  _transferOwnership */\n      tag_46\n        /* \"KNS/super/Ownable.sol\":1284:1314  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_45:\n        /* \"KNS/super/Ownable.sol\":1219:1322  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"KNS/super/Ownable.sol\":568:655  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"KNS/super/Ownable.sol\":614:621  address */\n      0x00\n        /* \"KNS/super/Ownable.sol\":641:647  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"KNS/super/Ownable.sol\":634:647  return _owner */\n      swap1\n      pop\n        /* \"KNS/super/Ownable.sol\":568:655  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"KNS/super/HasNoEther.sol\":308:418  function reclaimEther() external onlyOwner {... */\n    tag_19:\n        /* \"KNS/super/Ownable.sol\":799:811  _msgSender() */\n      tag_49\n        /* \"KNS/super/Ownable.sol\":799:809  _msgSender */\n      tag_26\n        /* \"KNS/super/Ownable.sol\":799:811  _msgSender() */\n      jump\t// in\n    tag_49:\n        /* \"KNS/super/Ownable.sol\":788:811  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"KNS/super/Ownable.sol\":788:795  owner() */\n      tag_50\n        /* \"KNS/super/Ownable.sol\":788:793  owner */\n      tag_15\n        /* \"KNS/super/Ownable.sol\":788:795  owner() */\n      jump\t// in\n    tag_50:\n        /* \"KNS/super/Ownable.sol\":788:811  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"KNS/super/Ownable.sol\":780:848  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_30\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"KNS/super/HasNoEther.sol\":370:377  owner() */\n      tag_54\n        /* \"KNS/super/HasNoEther.sol\":370:375  owner */\n      tag_15\n        /* \"KNS/super/HasNoEther.sol\":370:377  owner() */\n      jump\t// in\n    tag_54:\n        /* \"KNS/super/HasNoEther.sol\":362:387  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"KNS/super/HasNoEther.sol\":362:410  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"KNS/super/HasNoEther.sol\":388:409  address(this).balance */\n      selfbalance\n        /* \"KNS/super/HasNoEther.sol\":362:410  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n        /* \"KNS/super/HasNoEther.sol\":308:418  function reclaimEther() external onlyOwner {... */\n      jump\t// out\n        /* \"KNS/super/Ownable.sol\":1477:1678  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n        /* \"KNS/super/Ownable.sol\":799:811  _msgSender() */\n      tag_58\n        /* \"KNS/super/Ownable.sol\":799:809  _msgSender */\n      tag_26\n        /* \"KNS/super/Ownable.sol\":799:811  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"KNS/super/Ownable.sol\":788:811  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"KNS/super/Ownable.sol\":788:795  owner() */\n      tag_59\n        /* \"KNS/super/Ownable.sol\":788:793  owner */\n      tag_15\n        /* \"KNS/super/Ownable.sol\":788:795  owner() */\n      jump\t// in\n    tag_59:\n        /* \"KNS/super/Ownable.sol\":788:811  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"KNS/super/Ownable.sol\":780:848  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_30\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"KNS/super/Ownable.sol\":1586:1587  0 */\n      0x00\n        /* \"KNS/super/Ownable.sol\":1566:1588  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"KNS/super/Ownable.sol\":1566:1574  newOwner */\n      dup2\n        /* \"KNS/super/Ownable.sol\":1566:1588  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"KNS/super/Ownable.sol\":1558:1631  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"KNS/super/Ownable.sol\":1642:1670  _transferOwnership(newOwner) */\n      tag_66\n        /* \"KNS/super/Ownable.sol\":1661:1669  newOwner */\n      dup2\n        /* \"KNS/super/Ownable.sol\":1642:1660  _transferOwnership */\n      tag_46\n        /* \"KNS/super/Ownable.sol\":1642:1670  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_66:\n        /* \"KNS/super/Ownable.sol\":1477:1678  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"KNS/super/Context.sol\":162:260  function _msgSender() internal view virtual returns (address) {... */\n    tag_26:\n        /* \"KNS/super/Context.sol\":215:222  address */\n      0x00\n        /* \"KNS/super/Context.sol\":242:252  msg.sender */\n      caller\n        /* \"KNS/super/Context.sol\":235:252  return msg.sender */\n      swap1\n      pop\n        /* \"KNS/super/Context.sol\":162:260  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"KNS/super/Ownable.sol\":1838:2029  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_46:\n        /* \"KNS/super/Ownable.sol\":1912:1928  address oldOwner */\n      0x00\n        /* \"KNS/super/Ownable.sol\":1931:1937  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"KNS/super/Ownable.sol\":1912:1937  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"KNS/super/Ownable.sol\":1957:1965  newOwner */\n      dup2\n        /* \"KNS/super/Ownable.sol\":1948:1954  _owner */\n      0x00\n      dup1\n        /* \"KNS/super/Ownable.sol\":1948:1965  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"KNS/super/Ownable.sol\":2012:2020  newOwner */\n      dup2\n        /* \"KNS/super/Ownable.sol\":1981:2021  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"KNS/super/Ownable.sol\":2002:2010  oldOwner */\n      dup2\n        /* \"KNS/super/Ownable.sol\":1981:2021  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"KNS/super/Ownable.sol\":1901:2029  {... */\n      pop\n        /* \"KNS/super/Ownable.sol\":1838:2029  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_70:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_72:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_73:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_95\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_72\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_74:\n        /* \"#utility.yul\":641:665   */\n      tag_97\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_73\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_98\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_98:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_75:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_100\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_74\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_76:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_77:\n        /* \"#utility.yul\":997:1021   */\n      tag_103\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_76\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_104:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_78:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_106\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_77\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_10:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_109\n      tag_70\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1290:1409   */\n    tag_108:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_110\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_75\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_111\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_78\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_79:\n        /* \"#utility.yul\":1764:1788   */\n      tag_113\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_73\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_17:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_115\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_79\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_22:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_118\n      tag_70\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2105:2224   */\n    tag_117:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_119\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_75\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2533   */\n    tag_80:\n        /* \"#utility.yul\":2448:2459   */\n      0x00\n        /* \"#utility.yul\":2482:2488   */\n      dup3\n        /* \"#utility.yul\":2477:2480   */\n      dup3\n        /* \"#utility.yul\":2470:2489   */\n      mstore\n        /* \"#utility.yul\":2522:2526   */\n      0x20\n        /* \"#utility.yul\":2517:2520   */\n      dup3\n        /* \"#utility.yul\":2513:2527   */\n      add\n        /* \"#utility.yul\":2498:2527   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:2721   */\n    tag_81:\n        /* \"#utility.yul\":2679:2713   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2675:2676   */\n      0x00\n        /* \"#utility.yul\":2667:2673   */\n      dup3\n        /* \"#utility.yul\":2663:2677   */\n      add\n        /* \"#utility.yul\":2656:2714   */\n      mstore\n        /* \"#utility.yul\":2539:2721   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2727:3093   */\n    tag_82:\n        /* \"#utility.yul\":2869:2872   */\n      0x00\n        /* \"#utility.yul\":2890:2957   */\n      tag_123\n        /* \"#utility.yul\":2954:2956   */\n      0x20\n        /* \"#utility.yul\":2949:2952   */\n      dup4\n        /* \"#utility.yul\":2890:2957   */\n      tag_80\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2883:2957   */\n      swap2\n      pop\n        /* \"#utility.yul\":2966:3059   */\n      tag_124\n        /* \"#utility.yul\":3055:3058   */\n      dup3\n        /* \"#utility.yul\":2966:3059   */\n      tag_81\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3084:3086   */\n      0x20\n        /* \"#utility.yul\":3079:3082   */\n      dup3\n        /* \"#utility.yul\":3075:3087   */\n      add\n        /* \"#utility.yul\":3068:3087   */\n      swap1\n      pop\n        /* \"#utility.yul\":2727:3093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3099:3518   */\n    tag_30:\n        /* \"#utility.yul\":3265:3269   */\n      0x00\n        /* \"#utility.yul\":3303:3305   */\n      0x20\n        /* \"#utility.yul\":3292:3301   */\n      dup3\n        /* \"#utility.yul\":3288:3306   */\n      add\n        /* \"#utility.yul\":3280:3306   */\n      swap1\n      pop\n        /* \"#utility.yul\":3352:3361   */\n      dup2\n        /* \"#utility.yul\":3346:3350   */\n      dup2\n        /* \"#utility.yul\":3342:3362   */\n      sub\n        /* \"#utility.yul\":3338:3339   */\n      0x00\n        /* \"#utility.yul\":3327:3336   */\n      dup4\n        /* \"#utility.yul\":3323:3340   */\n      add\n        /* \"#utility.yul\":3316:3363   */\n      mstore\n        /* \"#utility.yul\":3380:3511   */\n      tag_126\n        /* \"#utility.yul\":3506:3510   */\n      dup2\n        /* \"#utility.yul\":3380:3511   */\n      tag_82\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3372:3511   */\n      swap1\n      pop\n        /* \"#utility.yul\":3099:3518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3524:3642   */\n    tag_83:\n        /* \"#utility.yul\":3611:3635   */\n      tag_128\n        /* \"#utility.yul\":3629:3634   */\n      dup2\n        /* \"#utility.yul\":3611:3635   */\n      tag_76\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3606:3609   */\n      dup3\n        /* \"#utility.yul\":3599:3636   */\n      mstore\n        /* \"#utility.yul\":3524:3642   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3648:3980   */\n    tag_34:\n        /* \"#utility.yul\":3769:3773   */\n      0x00\n        /* \"#utility.yul\":3807:3809   */\n      0x40\n        /* \"#utility.yul\":3796:3805   */\n      dup3\n        /* \"#utility.yul\":3792:3810   */\n      add\n        /* \"#utility.yul\":3784:3810   */\n      swap1\n      pop\n        /* \"#utility.yul\":3820:3891   */\n      tag_130\n        /* \"#utility.yul\":3888:3889   */\n      0x00\n        /* \"#utility.yul\":3877:3886   */\n      dup4\n        /* \"#utility.yul\":3873:3890   */\n      add\n        /* \"#utility.yul\":3864:3870   */\n      dup6\n        /* \"#utility.yul\":3820:3891   */\n      tag_79\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3901:3973   */\n      tag_131\n        /* \"#utility.yul\":3969:3971   */\n      0x20\n        /* \"#utility.yul\":3958:3967   */\n      dup4\n        /* \"#utility.yul\":3954:3972   */\n      add\n        /* \"#utility.yul\":3945:3951   */\n      dup5\n        /* \"#utility.yul\":3901:3973   */\n      tag_83\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3648:3980   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3986:4076   */\n    tag_84:\n        /* \"#utility.yul\":4020:4027   */\n      0x00\n        /* \"#utility.yul\":4063:4068   */\n      dup2\n        /* \"#utility.yul\":4056:4069   */\n      iszero\n        /* \"#utility.yul\":4049:4070   */\n      iszero\n        /* \"#utility.yul\":4038:4070   */\n      swap1\n      pop\n        /* \"#utility.yul\":3986:4076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4082:4198   */\n    tag_85:\n        /* \"#utility.yul\":4152:4173   */\n      tag_134\n        /* \"#utility.yul\":4167:4172   */\n      dup2\n        /* \"#utility.yul\":4152:4173   */\n      tag_84\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4145:4150   */\n      dup2\n        /* \"#utility.yul\":4142:4174   */\n      eq\n        /* \"#utility.yul\":4132:4192   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":4188:4189   */\n      0x00\n        /* \"#utility.yul\":4185:4186   */\n      dup1\n        /* \"#utility.yul\":4178:4190   */\n      revert\n        /* \"#utility.yul\":4132:4192   */\n    tag_135:\n        /* \"#utility.yul\":4082:4198   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4204:4341   */\n    tag_86:\n        /* \"#utility.yul\":4258:4263   */\n      0x00\n        /* \"#utility.yul\":4289:4295   */\n      dup2\n        /* \"#utility.yul\":4283:4296   */\n      mload\n        /* \"#utility.yul\":4274:4296   */\n      swap1\n      pop\n        /* \"#utility.yul\":4305:4335   */\n      tag_137\n        /* \"#utility.yul\":4329:4334   */\n      dup2\n        /* \"#utility.yul\":4305:4335   */\n      tag_85\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4204:4341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4347:4692   */\n    tag_38:\n        /* \"#utility.yul\":4414:4420   */\n      0x00\n        /* \"#utility.yul\":4463:4465   */\n      0x20\n        /* \"#utility.yul\":4451:4460   */\n      dup3\n        /* \"#utility.yul\":4442:4449   */\n      dup5\n        /* \"#utility.yul\":4438:4461   */\n      sub\n        /* \"#utility.yul\":4434:4466   */\n      slt\n        /* \"#utility.yul\":4431:4550   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":4469:4548   */\n      tag_140\n      tag_70\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4431:4550   */\n    tag_139:\n        /* \"#utility.yul\":4589:4590   */\n      0x00\n        /* \"#utility.yul\":4614:4675   */\n      tag_141\n        /* \"#utility.yul\":4667:4674   */\n      dup5\n        /* \"#utility.yul\":4658:4664   */\n      dup3\n        /* \"#utility.yul\":4647:4656   */\n      dup6\n        /* \"#utility.yul\":4643:4665   */\n      add\n        /* \"#utility.yul\":4614:4675   */\n      tag_86\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4604:4675   */\n      swap2\n      pop\n        /* \"#utility.yul\":4560:4685   */\n      pop\n        /* \"#utility.yul\":4347:4692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4698:4923   */\n    tag_87:\n        /* \"#utility.yul\":4838:4872   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4834:4835   */\n      0x00\n        /* \"#utility.yul\":4826:4832   */\n      dup3\n        /* \"#utility.yul\":4822:4836   */\n      add\n        /* \"#utility.yul\":4815:4873   */\n      mstore\n        /* \"#utility.yul\":4907:4915   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4902:4904   */\n      0x20\n        /* \"#utility.yul\":4894:4900   */\n      dup3\n        /* \"#utility.yul\":4890:4905   */\n      add\n        /* \"#utility.yul\":4883:4916   */\n      mstore\n        /* \"#utility.yul\":4698:4923   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4929:5295   */\n    tag_88:\n        /* \"#utility.yul\":5071:5074   */\n      0x00\n        /* \"#utility.yul\":5092:5159   */\n      tag_144\n        /* \"#utility.yul\":5156:5158   */\n      0x26\n        /* \"#utility.yul\":5151:5154   */\n      dup4\n        /* \"#utility.yul\":5092:5159   */\n      tag_80\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5085:5159   */\n      swap2\n      pop\n        /* \"#utility.yul\":5168:5261   */\n      tag_145\n        /* \"#utility.yul\":5257:5260   */\n      dup3\n        /* \"#utility.yul\":5168:5261   */\n      tag_87\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":5286:5288   */\n      0x40\n        /* \"#utility.yul\":5281:5284   */\n      dup3\n        /* \"#utility.yul\":5277:5289   */\n      add\n        /* \"#utility.yul\":5270:5289   */\n      swap1\n      pop\n        /* \"#utility.yul\":4929:5295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5301:5720   */\n    tag_65:\n        /* \"#utility.yul\":5467:5471   */\n      0x00\n        /* \"#utility.yul\":5505:5507   */\n      0x20\n        /* \"#utility.yul\":5494:5503   */\n      dup3\n        /* \"#utility.yul\":5490:5508   */\n      add\n        /* \"#utility.yul\":5482:5508   */\n      swap1\n      pop\n        /* \"#utility.yul\":5554:5563   */\n      dup2\n        /* \"#utility.yul\":5548:5552   */\n      dup2\n        /* \"#utility.yul\":5544:5564   */\n      sub\n        /* \"#utility.yul\":5540:5541   */\n      0x00\n        /* \"#utility.yul\":5529:5538   */\n      dup4\n        /* \"#utility.yul\":5525:5542   */\n      add\n        /* \"#utility.yul\":5518:5565   */\n      mstore\n        /* \"#utility.yul\":5582:5713   */\n      tag_147\n        /* \"#utility.yul\":5708:5712   */\n      dup2\n        /* \"#utility.yul\":5582:5713   */\n      tag_88\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5574:5713   */\n      swap1\n      pop\n        /* \"#utility.yul\":5301:5720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e0506f043a51504bd5f29f6bfd39eae9b35aa6bd0636dae2cd52920a9c54fcf964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_190": {
									"entryPoint": null,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 50,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_270": {
									"entryPoint": 58,
									"id": 270,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61081e8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806361ce35291461005c578063715018a6146100785780638da5cb5b146100825780639f727c27146100a0578063f2fde38b146100aa575b600080fd5b610076600480360381019061007191906105a5565b6100c6565b005b6100806101cc565b005b61008a610254565b60405161009791906105f4565b60405180910390f35b6100a861027d565b005b6100c460048036038101906100bf919061060f565b610349565b005b6100ce610440565b73ffffffffffffffffffffffffffffffffffffffff166100ec610254565b73ffffffffffffffffffffffffffffffffffffffff1614610142576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013990610699565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610166610254565b836040518363ffffffff1660e01b81526004016101849291906106c8565b6020604051808303816000875af11580156101a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c79190610729565b505050565b6101d4610440565b73ffffffffffffffffffffffffffffffffffffffff166101f2610254565b73ffffffffffffffffffffffffffffffffffffffff1614610248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023f90610699565b60405180910390fd5b6102526000610448565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610285610440565b73ffffffffffffffffffffffffffffffffffffffff166102a3610254565b73ffffffffffffffffffffffffffffffffffffffff16146102f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f090610699565b60405180910390fd5b610301610254565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610346573d6000803e3d6000fd5b50565b610351610440565b73ffffffffffffffffffffffffffffffffffffffff1661036f610254565b73ffffffffffffffffffffffffffffffffffffffff16146103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bc90610699565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b906107c8565b60405180910390fd5b61043d81610448565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053c82610511565b9050919050565b61054c81610531565b811461055757600080fd5b50565b60008135905061056981610543565b92915050565b6000819050919050565b6105828161056f565b811461058d57600080fd5b50565b60008135905061059f81610579565b92915050565b600080604083850312156105bc576105bb61050c565b5b60006105ca8582860161055a565b92505060206105db85828601610590565b9150509250929050565b6105ee81610531565b82525050565b600060208201905061060960008301846105e5565b92915050565b6000602082840312156106255761062461050c565b5b60006106338482850161055a565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061068360208361063c565b915061068e8261064d565b602082019050919050565b600060208201905081810360008301526106b281610676565b9050919050565b6106c28161056f565b82525050565b60006040820190506106dd60008301856105e5565b6106ea60208301846106b9565b9392505050565b60008115159050919050565b610706816106f1565b811461071157600080fd5b50565b600081519050610723816106fd565b92915050565b60006020828403121561073f5761073e61050c565b5b600061074d84828501610714565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107b260268361063c565b91506107bd82610756565b604082019050919050565b600060208201905081810360008301526107e1816107a5565b905091905056fea2646970667358221220e0506f043a51504bd5f29f6bfd39eae9b35aa6bd0636dae2cd52920a9c54fcf964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x81E DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61CE3529 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x9F727C27 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0xC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x1CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH2 0x254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x27D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0x440 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139 SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x166 PUSH2 0x254 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184 SWAP3 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x729 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x440 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F2 PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x252 PUSH1 0x0 PUSH2 0x448 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x285 PUSH2 0x440 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A3 PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F0 SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x301 PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x351 PUSH2 0x440 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x36F PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BC SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42B SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x448 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53C DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54C DUP2 PUSH2 0x531 JUMP JUMPDEST DUP2 EQ PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x569 DUP2 PUSH2 0x543 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x582 DUP2 PUSH2 0x56F JUMP JUMPDEST DUP2 EQ PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x59F DUP2 PUSH2 0x579 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BC JUMPI PUSH2 0x5BB PUSH2 0x50C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CA DUP6 DUP3 DUP7 ADD PUSH2 0x55A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5DB DUP6 DUP3 DUP7 ADD PUSH2 0x590 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x531 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x609 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x625 JUMPI PUSH2 0x624 PUSH2 0x50C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x633 DUP5 DUP3 DUP6 ADD PUSH2 0x55A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 PUSH1 0x20 DUP4 PUSH2 0x63C JUMP JUMPDEST SWAP2 POP PUSH2 0x68E DUP3 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6B2 DUP2 PUSH2 0x676 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C2 DUP2 PUSH2 0x56F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6DD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x6EA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x706 DUP2 PUSH2 0x6F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x723 DUP2 PUSH2 0x6FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73F JUMPI PUSH2 0x73E PUSH2 0x50C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x74D DUP5 DUP3 DUP6 ADD PUSH2 0x714 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B2 PUSH1 0x26 DUP4 PUSH2 0x63C JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD DUP3 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7E1 DUP2 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 POP PUSH16 0x43A51504BD5F29F6BFD39EAE9B35AA6 0xBD MOD CALLDATASIZE 0xDA 0xE2 0xCD MSTORE SWAP3 EXP SWAP13 SLOAD 0xFC 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "191:365:2:-:0;;;;;;;;;;;;;447:32:3;466:12;:10;;;:12;;:::i;:::-;447:18;;;:32;;:::i;:::-;191:365:2;;162:98:1;215:7;242:10;235:17;;162:98;:::o;1838:191:3:-;1912:16;1931:6;;;;;;;;;;;1912:25;;1957:8;1948:6;;:17;;;;;;;;;;;;;;;;;;2012:8;1981:40;;2002:8;1981:40;;;;;;;;;;;;1901:128;1838:191;:::o;191:365:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_111": {
									"entryPoint": 1088,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_270": {
									"entryPoint": 1096,
									"id": 270,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_199": {
									"entryPoint": 596,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reclaimEther_147": {
									"entryPoint": 637,
									"id": 147,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reclaimToken_166": {
									"entryPoint": 198,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_227": {
									"entryPoint": 460,
									"id": 227,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_250": {
									"entryPoint": 841,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5723:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:4",
														"type": ""
													}
												],
												"src": "841:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:4"
															},
															"nodeType": "YulIf",
															"src": "977:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:4",
														"type": ""
													}
												],
												"src": "924:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:4",
														"type": ""
													}
												],
												"src": "1052:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:4"
															},
															"nodeType": "YulIf",
															"src": "1290:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:4",
														"type": ""
													}
												],
												"src": "1197:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:4",
														"type": ""
													}
												],
												"src": "1677:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:4",
														"type": ""
													}
												],
												"src": "1801:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2095:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2141:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:32:4"
															},
															"nodeType": "YulIf",
															"src": "2105:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2234:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2278:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2065:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2076:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2088:6:4",
														"type": ""
													}
												],
												"src": "2029:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2477:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2482:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2498:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2517:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2522:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2513:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2498:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2432:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2437:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2448:11:4",
														"type": ""
													}
												],
												"src": "2364:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2645:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2675:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2663:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2679:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2656:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2656:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2656:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2637:6:4",
														"type": ""
													}
												],
												"src": "2539:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2873:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2883:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2949:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2890:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2890:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3055:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "2966:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2966:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3068:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3079:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3084:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3075:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3075:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3068:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2861:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2869:3:4",
														"type": ""
													}
												],
												"src": "2727:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3270:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3280:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3292:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3303:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3288:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3288:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3280:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3327:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3338:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3323:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3323:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3346:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3352:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3342:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3342:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3316:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3316:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3372:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3506:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3380:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3380:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3372:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3250:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3265:4:4",
														"type": ""
													}
												],
												"src": "3099:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3589:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3606:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3629:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3611:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3611:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3599:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3599:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3577:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3584:3:4",
														"type": ""
													}
												],
												"src": "3524:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3774:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3784:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3796:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3792:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3792:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3784:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3864:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3877:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3888:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3873:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3873:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3820:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3945:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3958:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3969:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3954:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3954:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3901:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3901:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3901:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3738:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3750:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3758:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3769:4:4",
														"type": ""
													}
												],
												"src": "3648:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4028:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4038:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4063:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4056:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4056:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4038:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4010:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4020:7:4",
														"type": ""
													}
												],
												"src": "3986:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4122:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4176:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4185:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4188:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4178:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4178:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4178:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4145:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4167:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4152:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4152:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4142:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4142:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4135:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:40:4"
															},
															"nodeType": "YulIf",
															"src": "4132:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4115:5:4",
														"type": ""
													}
												],
												"src": "4082:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4264:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4274:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4289:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4283:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4274:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4329:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4305:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4305:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4305:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4242:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4250:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4258:5:4",
														"type": ""
													}
												],
												"src": "4204:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4421:271:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4467:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4469:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4469:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4469:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4442:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4451:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4438:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4438:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4434:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4434:32:4"
															},
															"nodeType": "YulIf",
															"src": "4431:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4560:125:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4575:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4589:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4579:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4604:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4647:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4658:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4643:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4643:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4667:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4614:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4614:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4604:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4391:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4402:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4414:6:4",
														"type": ""
													}
												],
												"src": "4347:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4804:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4826:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4834:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4838:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4815:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4815:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4894:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4902:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4890:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4890:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4907:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4883:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4883:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4883:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4796:6:4",
														"type": ""
													}
												],
												"src": "4698:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5075:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5085:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5151:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5156:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5092:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5085:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5257:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "5168:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5168:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5168:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5270:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5281:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5286:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5277:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5277:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5270:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5063:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5071:3:4",
														"type": ""
													}
												],
												"src": "4929:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5482:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5494:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5505:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5490:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5490:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5482:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5540:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5525:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5548:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5554:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5544:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5518:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5518:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5518:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5574:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5708:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5582:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5582:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5574:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5452:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5467:4:4",
														"type": ""
													}
												],
												"src": "5301:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806361ce35291461005c578063715018a6146100785780638da5cb5b146100825780639f727c27146100a0578063f2fde38b146100aa575b600080fd5b610076600480360381019061007191906105a5565b6100c6565b005b6100806101cc565b005b61008a610254565b60405161009791906105f4565b60405180910390f35b6100a861027d565b005b6100c460048036038101906100bf919061060f565b610349565b005b6100ce610440565b73ffffffffffffffffffffffffffffffffffffffff166100ec610254565b73ffffffffffffffffffffffffffffffffffffffff1614610142576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013990610699565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610166610254565b836040518363ffffffff1660e01b81526004016101849291906106c8565b6020604051808303816000875af11580156101a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c79190610729565b505050565b6101d4610440565b73ffffffffffffffffffffffffffffffffffffffff166101f2610254565b73ffffffffffffffffffffffffffffffffffffffff1614610248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023f90610699565b60405180910390fd5b6102526000610448565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610285610440565b73ffffffffffffffffffffffffffffffffffffffff166102a3610254565b73ffffffffffffffffffffffffffffffffffffffff16146102f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f090610699565b60405180910390fd5b610301610254565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610346573d6000803e3d6000fd5b50565b610351610440565b73ffffffffffffffffffffffffffffffffffffffff1661036f610254565b73ffffffffffffffffffffffffffffffffffffffff16146103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bc90610699565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b906107c8565b60405180910390fd5b61043d81610448565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053c82610511565b9050919050565b61054c81610531565b811461055757600080fd5b50565b60008135905061056981610543565b92915050565b6000819050919050565b6105828161056f565b811461058d57600080fd5b50565b60008135905061059f81610579565b92915050565b600080604083850312156105bc576105bb61050c565b5b60006105ca8582860161055a565b92505060206105db85828601610590565b9150509250929050565b6105ee81610531565b82525050565b600060208201905061060960008301846105e5565b92915050565b6000602082840312156106255761062461050c565b5b60006106338482850161055a565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061068360208361063c565b915061068e8261064d565b602082019050919050565b600060208201905081810360008301526106b281610676565b9050919050565b6106c28161056f565b82525050565b60006040820190506106dd60008301856105e5565b6106ea60208301846106b9565b9392505050565b60008115159050919050565b610706816106f1565b811461071157600080fd5b50565b600081519050610723816106fd565b92915050565b60006020828403121561073f5761073e61050c565b5b600061074d84828501610714565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107b260268361063c565b91506107bd82610756565b604082019050919050565b600060208201905081810360008301526107e1816107a5565b905091905056fea2646970667358221220e0506f043a51504bd5f29f6bfd39eae9b35aa6bd0636dae2cd52920a9c54fcf964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61CE3529 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x9F727C27 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0xC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x1CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH2 0x254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x27D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0x440 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139 SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x166 PUSH2 0x254 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184 SWAP3 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x729 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x440 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F2 PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x252 PUSH1 0x0 PUSH2 0x448 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x285 PUSH2 0x440 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A3 PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F0 SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x301 PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x351 PUSH2 0x440 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x36F PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BC SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42B SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x448 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53C DUP3 PUSH2 0x511 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54C DUP2 PUSH2 0x531 JUMP JUMPDEST DUP2 EQ PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x569 DUP2 PUSH2 0x543 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x582 DUP2 PUSH2 0x56F JUMP JUMPDEST DUP2 EQ PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x59F DUP2 PUSH2 0x579 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BC JUMPI PUSH2 0x5BB PUSH2 0x50C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CA DUP6 DUP3 DUP7 ADD PUSH2 0x55A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5DB DUP6 DUP3 DUP7 ADD PUSH2 0x590 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x531 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x609 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x625 JUMPI PUSH2 0x624 PUSH2 0x50C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x633 DUP5 DUP3 DUP6 ADD PUSH2 0x55A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 PUSH1 0x20 DUP4 PUSH2 0x63C JUMP JUMPDEST SWAP2 POP PUSH2 0x68E DUP3 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6B2 DUP2 PUSH2 0x676 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C2 DUP2 PUSH2 0x56F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6DD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x6EA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x706 DUP2 PUSH2 0x6F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x723 DUP2 PUSH2 0x6FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73F JUMPI PUSH2 0x73E PUSH2 0x50C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x74D DUP5 DUP3 DUP6 ADD PUSH2 0x714 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B2 PUSH1 0x26 DUP4 PUSH2 0x63C JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD DUP3 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7E1 DUP2 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 POP PUSH16 0x43A51504BD5F29F6BFD39EAE9B35AA6 0xBD MOD CALLDATASIZE 0xDA 0xE2 0xCD MSTORE SWAP3 EXP SWAP13 SLOAD 0xFC 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "191:365:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;428:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1219:103:3;;;:::i;:::-;;568:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;308:110:2;;;:::i;:::-;;1477:201:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;428:125:2;799:12:3;:10;:12::i;:::-;788:23;;:7;:5;:7::i;:::-;:23;;;780:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;514:5:2::1;507:22;;;530:7;:5;:7::i;:::-;538:6;507:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;428:125:::0;;:::o;1219:103:3:-;799:12;:10;:12::i;:::-;788:23;;:7;:5;:7::i;:::-;:23;;;780:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1284:30:::1;1311:1;1284:18;:30::i;:::-;1219:103::o:0;568:87::-;614:7;641:6;;;;;;;;;;;634:13;;568:87;:::o;308:110:2:-;799:12:3;:10;:12::i;:::-;788:23;;:7;:5;:7::i;:::-;:23;;;780:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;370:7:2::1;:5;:7::i;:::-;362:25;;:48;388:21;362:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;308:110::o:0;1477:201:3:-;799:12;:10;:12::i;:::-;788:23;;:7;:5;:7::i;:::-;:23;;;780:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1586:1:::1;1566:22;;:8;:22;;::::0;1558:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1642:28;1661:8;1642:18;:28::i;:::-;1477:201:::0;:::o;162:98:1:-;215:7;242:10;235:17;;162:98;:::o;1838:191:3:-;1912:16;1931:6;;;;;;;;;;;1912:25;;1957:8;1948:6;;:17;;;;;;;;;;;;;;;;;;2012:8;1981:40;;2002:8;1981:40;;;;;;;;;;;;1901:128;1838:191;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:169::-;2448:11;2482:6;2477:3;2470:19;2522:4;2517:3;2513:14;2498:29;;2364:169;;;;:::o;2539:182::-;2679:34;2675:1;2667:6;2663:14;2656:58;2539:182;:::o;2727:366::-;2869:3;2890:67;2954:2;2949:3;2890:67;:::i;:::-;2883:74;;2966:93;3055:3;2966:93;:::i;:::-;3084:2;3079:3;3075:12;3068:19;;2727:366;;;:::o;3099:419::-;3265:4;3303:2;3292:9;3288:18;3280:26;;3352:9;3346:4;3342:20;3338:1;3327:9;3323:17;3316:47;3380:131;3506:4;3380:131;:::i;:::-;3372:139;;3099:419;;;:::o;3524:118::-;3611:24;3629:5;3611:24;:::i;:::-;3606:3;3599:37;3524:118;;:::o;3648:332::-;3769:4;3807:2;3796:9;3792:18;3784:26;;3820:71;3888:1;3877:9;3873:17;3864:6;3820:71;:::i;:::-;3901:72;3969:2;3958:9;3954:18;3945:6;3901:72;:::i;:::-;3648:332;;;;;:::o;3986:90::-;4020:7;4063:5;4056:13;4049:21;4038:32;;3986:90;;;:::o;4082:116::-;4152:21;4167:5;4152:21;:::i;:::-;4145:5;4142:32;4132:60;;4188:1;4185;4178:12;4132:60;4082:116;:::o;4204:137::-;4258:5;4289:6;4283:13;4274:22;;4305:30;4329:5;4305:30;:::i;:::-;4204:137;;;;:::o;4347:345::-;4414:6;4463:2;4451:9;4442:7;4438:23;4434:32;4431:119;;;4469:79;;:::i;:::-;4431:119;4589:1;4614:61;4667:7;4658:6;4647:9;4643:22;4614:61;:::i;:::-;4604:71;;4560:125;4347:345;;;;:::o;4698:225::-;4838:34;4834:1;4826:6;4822:14;4815:58;4907:8;4902:2;4894:6;4890:15;4883:33;4698:225;:::o;4929:366::-;5071:3;5092:67;5156:2;5151:3;5092:67;:::i;:::-;5085:74;;5168:93;5257:3;5168:93;:::i;:::-;5286:2;5281:3;5277:12;5270:19;;4929:366;;;:::o;5301:419::-;5467:4;5505:2;5494:9;5490:18;5482:26;;5554:9;5548:4;5544:20;5540:1;5529:9;5525:17;5518:47;5582:131;5708:4;5582:131;:::i;:::-;5574:139;;5301:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "415600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2544",
								"reclaimEther()": "infinite",
								"reclaimToken(address,uint256)": "infinite",
								"renounceOwnership()": "30374",
								"transferOwnership(address)": "30786"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 191,
									"end": 556,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 191,
									"end": 556,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 191,
									"end": 556,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 191,
									"end": 556,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 191,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 191,
									"end": 556,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 191,
									"end": 556,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 191,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 191,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 447,
									"end": 479,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 466,
									"end": 478,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 466,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 466,
									"end": 476,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 466,
									"end": 476,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 466,
									"end": 478,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 466,
									"end": 478,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 466,
									"end": 478,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 466,
									"end": 478,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 466,
									"end": 478,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 447,
									"end": 465,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 447,
									"end": 465,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 447,
									"end": 465,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 447,
									"end": 479,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 447,
									"end": 479,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 447,
									"end": 479,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 447,
									"end": 479,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 447,
									"end": 479,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 191,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 162,
									"end": 260,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 162,
									"end": 260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 215,
									"end": 222,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 252,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 235,
									"end": 252,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 235,
									"end": 252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 162,
									"end": 260,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 162,
									"end": 260,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1838,
									"end": 2029,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1838,
									"end": 2029,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1912,
									"end": 1928,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1931,
									"end": 1937,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1912,
									"end": 1937,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1912,
									"end": 1937,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1957,
									"end": 1965,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1954,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1948,
									"end": 1954,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1948,
									"end": 1965,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2012,
									"end": 2020,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2002,
									"end": 2010,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1981,
									"end": 2021,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 1901,
									"end": 2029,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1838,
									"end": 2029,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1838,
									"end": 2029,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 191,
									"end": 556,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 191,
									"end": 556,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 191,
									"end": 556,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 556,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e0506f043a51504bd5f29f6bfd39eae9b35aa6bd0636dae2cd52920a9c54fcf964736f6c634300080d0033",
									".code": [
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "61CE3529"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "9F727C27"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 191,
											"end": 556,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 553,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 428,
											"end": 553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 428,
											"end": 553,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 553,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 428,
											"end": 553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 428,
											"end": 553,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 553,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1322,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1219,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1219,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1219,
											"end": 1322,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1219,
											"end": 1322,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1219,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1322,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 308,
											"end": 418,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 308,
											"end": 418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 308,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 308,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 308,
											"end": 418,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 308,
											"end": 418,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 308,
											"end": 418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 308,
											"end": 418,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 428,
											"end": 553,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 428,
											"end": 553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 799,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 799,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 788,
											"end": 811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 788,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 788,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 788,
											"end": 811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 514,
											"end": 519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 529,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 507,
											"end": 529,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 507,
											"end": 529,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 530,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 530,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 530,
											"end": 537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 537,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 530,
											"end": 537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 507,
											"end": 545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 507,
											"end": 545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 428,
											"end": 553,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1219,
											"end": 1322,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1219,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 799,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 788,
											"end": 811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 788,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 788,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 788,
											"end": 811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1284,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1311,
											"end": 1312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1284,
											"end": 1314,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1284,
											"end": 1314,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1284,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1322,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 568,
											"end": 655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 614,
											"end": 621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 641,
											"end": 647,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 641,
											"end": 647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 641,
											"end": 647,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 641,
											"end": 647,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 634,
											"end": 647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 634,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 655,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 308,
											"end": 418,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 308,
											"end": 418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 799,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 799,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 788,
											"end": 811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 788,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 788,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 788,
											"end": 811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 370,
											"end": 377,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 377,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 370,
											"end": 377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 388,
											"end": 409,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 362,
											"end": 410,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 410,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 362,
											"end": 410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 308,
											"end": 418,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 799,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 799,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 788,
											"end": 811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 788,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 788,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 788,
											"end": 795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 788,
											"end": 811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 788,
											"end": 811,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 780,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 780,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1566,
											"end": 1574,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1566,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1566,
											"end": 1588,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1558,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1661,
											"end": 1669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1642,
											"end": 1670,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1642,
											"end": 1670,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1642,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1678,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 162,
											"end": 260,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 162,
											"end": 260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 215,
											"end": 222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 252,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 235,
											"end": 252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 235,
											"end": 252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 162,
											"end": 260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 260,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1838,
											"end": 2029,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1838,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1965,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 1954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2010,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 2029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 2029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 2029,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2459,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2488,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2520,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2539,
											"end": 2721,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2539,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2713,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2721,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2727,
											"end": 3093,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2727,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2949,
											"end": 2952,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2890,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2890,
											"end": 2957,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2890,
											"end": 2957,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2890,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2883,
											"end": 2957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2883,
											"end": 2957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3055,
											"end": 3058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2966,
											"end": 3059,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 3059,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2966,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3084,
											"end": 3086,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3087,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3087,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3087,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 3093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 3093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 3093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 3093,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3099,
											"end": 3518,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3099,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3265,
											"end": 3269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3305,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3350,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3338,
											"end": 3339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3316,
											"end": 3363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3506,
											"end": 3510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3380,
											"end": 3511,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3380,
											"end": 3511,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3380,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3511,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3099,
											"end": 3518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3099,
											"end": 3518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3099,
											"end": 3518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3099,
											"end": 3518,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3524,
											"end": 3642,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3524,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3611,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3629,
											"end": 3634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3611,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3611,
											"end": 3635,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3611,
											"end": 3635,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3611,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3606,
											"end": 3609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3599,
											"end": 3636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3524,
											"end": 3642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3524,
											"end": 3642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3524,
											"end": 3642,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3648,
											"end": 3980,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3648,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3769,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3810,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3888,
											"end": 3889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 3890,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3820,
											"end": 3891,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3820,
											"end": 3891,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3820,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3958,
											"end": 3967,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3954,
											"end": 3972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3901,
											"end": 3973,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3901,
											"end": 3973,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3901,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3980,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3980,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3980,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3986,
											"end": 4076,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3986,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4069,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4070,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4076,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4082,
											"end": 4198,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4082,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4152,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4167,
											"end": 4172,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4152,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4152,
											"end": 4173,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4152,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4145,
											"end": 4150,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4142,
											"end": 4174,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4132,
											"end": 4192,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4178,
											"end": 4190,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4192,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4132,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4082,
											"end": 4198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4082,
											"end": 4198,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4283,
											"end": 4296,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4329,
											"end": 4334,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4305,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4305,
											"end": 4335,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4305,
											"end": 4335,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4305,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4347,
											"end": 4692,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4347,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4420,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4442,
											"end": 4449,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4461,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4434,
											"end": 4466,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4550,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4431,
											"end": 4550,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4469,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4469,
											"end": 4548,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4469,
											"end": 4548,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4469,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4550,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4431,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4667,
											"end": 4674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4658,
											"end": 4664,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4647,
											"end": 4656,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4643,
											"end": 4665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4614,
											"end": 4675,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4614,
											"end": 4675,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4614,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4560,
											"end": 4685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4692,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4692,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4698,
											"end": 4923,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4698,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4838,
											"end": 4872,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4834,
											"end": 4835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4822,
											"end": 4836,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4815,
											"end": 4873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4904,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4894,
											"end": 4900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 4905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4698,
											"end": 4923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4698,
											"end": 4923,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4929,
											"end": 5295,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4929,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5156,
											"end": 5158,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 5151,
											"end": 5154,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5092,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5092,
											"end": 5159,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5092,
											"end": 5159,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5092,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5257,
											"end": 5260,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 5168,
											"end": 5261,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5168,
											"end": 5261,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5168,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5286,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5281,
											"end": 5284,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5277,
											"end": 5289,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 5295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 5295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 5295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 5295,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5494,
											"end": 5503,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5554,
											"end": 5563,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5565,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5582,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5708,
											"end": 5712,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5582,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5582,
											"end": 5713,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5582,
											"end": 5713,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5582,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5574,
											"end": 5713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5574,
											"end": 5713,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"reclaimEther()": "9f727c27",
							"reclaimToken(address,uint256)": "61ce3529",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reclaimEther()\":{\"details\":\"Transfer all Ether held by the contract to the owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KNS/super/HasNoEther.sol\":\"HasNoEther\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"KNS/interface/IBEP20.sol\":{\"keccak256\":\"0x676d2985c77e38e8222282191f0e4bcbfab2fbfc6292a67d01ba28a52b68f6eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a086760176642fb98bf99685d56c2c51e114d989523ef34bc7d3fea5207c4ee9\",\"dweb:/ipfs/QmYCXZHXQdX4ZTKeyjXfMSBrNrqrU6cXcEdPYqKUVe8S3c\"]},\"KNS/super/Context.sol\":{\"keccak256\":\"0xb404829888978c2da845daa1eda5bfd9d109ff6d5dcdc29348c2109ae0d34f3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203f5931ddd28501c18ab5b8665014b2f3126f3453cf93227e882fba4f614253\",\"dweb:/ipfs/QmXw55pgAKQTPBsQaPUYC4FSUrhZXzMpdMtAcRg61CAbuM\"]},\"KNS/super/HasNoEther.sol\":{\"keccak256\":\"0x6f61b77699ffe14cfdc89709cd7178f51078ca5cb2b899bda690e41a353de0d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2c688af759375a740d6237638bd9f0f58e91f8acf0015e975b5322e3ed0bf5d\",\"dweb:/ipfs/QmWB2tPPyRonT1GS5DmByf2zVJpnTaDnQgAAdbjHDv2wKU\"]},\"KNS/super/Ownable.sol\":{\"keccak256\":\"0xef09051d7e9a08ca438d4242e46b0d82db103c2ba239660c4339e8d5604b47ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2494932786a9c18b5629091596420b6df3c4526f3d6af8637a050c15f37344e4\",\"dweb:/ipfs/QmZbiG3frUtyH5BNrAv5HfUBTmLhNuzduMcsLaEbmBGjxr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 174,
								"contract": "KNS/super/HasNoEther.sol:HasNoEther",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"KNS/super/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"KNS/super/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"KNS/super/Context.sol\":{\"keccak256\":\"0xb404829888978c2da845daa1eda5bfd9d109ff6d5dcdc29348c2109ae0d34f3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203f5931ddd28501c18ab5b8665014b2f3126f3453cf93227e882fba4f614253\",\"dweb:/ipfs/QmXw55pgAKQTPBsQaPUYC4FSUrhZXzMpdMtAcRg61CAbuM\"]},\"KNS/super/Ownable.sol\":{\"keccak256\":\"0xef09051d7e9a08ca438d4242e46b0d82db103c2ba239660c4339e8d5604b47ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2494932786a9c18b5629091596420b6df3c4526f3d6af8637a050c15f37344e4\",\"dweb:/ipfs/QmZbiG3frUtyH5BNrAv5HfUBTmLhNuzduMcsLaEbmBGjxr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 174,
								"contract": "KNS/super/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"KNS/interface/IBEP20.sol": {
				"ast": {
					"absolutePath": "KNS/interface/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							100
						]
					},
					"id": 101,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IBEP20",
							"nameLocation": "139:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "153:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "234:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:9:0"
									},
									"scope": 100,
									"src": "225:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "288:51:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "354:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "388:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "388:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:7:0"
									},
									"scope": 100,
									"src": "345:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "403:49:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "467:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "499:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "499:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:15:0"
									},
									"scope": 100,
									"src": "458:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "522:45:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "582:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "612:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "612:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:15:0"
									},
									"scope": 100,
									"src": "573:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "635:52:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "702:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "736:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:9:0"
									},
									"scope": 100,
									"src": "693:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "753:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "840:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "850:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "890:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:9:0"
									},
									"scope": 100,
									"src": "831:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "907:205:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1127:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1144:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1136:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1163:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1155:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1189:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1189:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:6:0"
									},
									"scope": 100,
									"src": "1118:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1203:260:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1478:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1496:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1512:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1504:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1487:33:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1544:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:9:0"
									},
									"scope": 100,
									"src": "1469:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1561:631:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2207:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2223:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2215:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2240:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2232:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:33:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:6:0"
									},
									"scope": 100,
									"src": "2198:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2280:290:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2585:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2622:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2614:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2641:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2633:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2597:51:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2667:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2667:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:6:0"
									},
									"scope": 100,
									"src": "2576:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2681:155:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 90,
									"name": "Transfer",
									"nameLocation": "2848:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2873:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2857:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2895:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2879:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2907:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2899:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2856:57:0"
									},
									"src": "2842:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2922:147:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 99,
									"name": "Approval",
									"nameLocation": "3081:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3106:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3090:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3129:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3113:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3146:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3138:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3089:63:0"
									},
									"src": "3075:78:0"
								}
							],
							"scope": 101,
							"src": "129:3027:0",
							"usedErrors": []
						}
					],
					"src": "101:3055:0"
				},
				"id": 0
			},
			"KNS/super/Context.sol": {
				"ast": {
					"absolutePath": "KNS/super/Context.sol",
					"exportedSymbols": {
						"Context": [
							121
						]
					},
					"id": 122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 102,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "Context",
							"nameLocation": "147:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "224:36:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "242:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "242:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "235:17:1"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "171:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "181:2:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "215:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:9:1"
									},
									"scope": 121,
									"src": "162:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "335:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "353:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "353:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "346:15:1"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "277:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:2:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "319:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "319:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:16:1"
									},
									"scope": 121,
									"src": "268:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 122,
							"src": "129:243:1",
							"usedErrors": []
						}
					],
					"src": "101:271:1"
				},
				"id": 1
			},
			"KNS/super/HasNoEther.sol": {
				"ast": {
					"absolutePath": "KNS/super/HasNoEther.sol",
					"exportedSymbols": {
						"Context": [
							121
						],
						"HasNoEther": [
							167
						],
						"IBEP20": [
							100
						],
						"Ownable": [
							271
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 123,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "KNS/super/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 168,
							"sourceUnit": 272,
							"src": "129:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "KNS/interface/IBEP20.sol",
							"file": "../interface/IBEP20.sol",
							"id": 125,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 168,
							"sourceUnit": 101,
							"src": "154:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 126,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 271,
										"src": "214:7:2"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "214:7:2"
								}
							],
							"canonicalName": "HasNoEther",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 167,
							"linearizedBaseContracts": [
								167,
								271,
								121
							],
							"name": "HasNoEther",
							"nameLocation": "200:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "351:67:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 141,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "396:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_HasNoEther_$167",
																			"typeString": "contract HasNoEther"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_HasNoEther_$167",
																			"typeString": "contract HasNoEther"
																		}
																	],
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "388:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 139,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "388:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "388:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "388:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 135,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "370:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "370:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "362:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 133,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "362:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "362:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "362:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "362:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "362:48:2"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "227:75:2",
										"text": " @dev Transfer all Ether held by the contract to the owner."
									},
									"functionSelector": "9f727c27",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 130,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "341:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "341:9:2"
										}
									],
									"name": "reclaimEther",
									"nameLocation": "317:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "329:2:2"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:0:2"
									},
									"scope": 167,
									"src": "308:110:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "496:57:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 160,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "530:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "530:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 162,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "538:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 157,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "514:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 156,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "507:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$100_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "507:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$100",
																"typeString": "contract IBEP20"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 49,
														"src": "507:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "507:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "507:38:2"
											}
										]
									},
									"functionSelector": "61ce3529",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 154,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 153,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "486:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "486:9:2"
										}
									],
									"name": "reclaimToken",
									"nameLocation": "437:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "458:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "450:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "469:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "464:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "464:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:27:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:0:2"
									},
									"scope": 167,
									"src": "428:125:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "191:365:2",
							"usedErrors": []
						}
					],
					"src": "101:455:2"
				},
				"id": 2
			},
			"KNS/super/Ownable.sol": {
				"ast": {
					"absolutePath": "KNS/super/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							121
						],
						"Ownable": [
							271
						]
					},
					"id": 272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "KNS/super/Context.sol",
							"file": "./Context.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 272,
							"sourceUnit": 122,
							"src": "129:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 171,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "185:7:3"
									},
									"id": 172,
									"nodeType": "InheritanceSpecifier",
									"src": "185:7:3"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 271,
							"linearizedBaseContracts": [
								271,
								121
							],
							"name": "Ownable",
							"nameLocation": "174:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 174,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "216:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 271,
									"src": "200:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 173,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "200:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 180,
									"name": "OwnershipTransferred",
									"nameLocation": "237:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "274:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "258:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "305:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "289:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:57:3"
									},
									"src": "231:84:3"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "436:51:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 185,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "466:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "466:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "447:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "447:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "447:32:3"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "323:93:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 190,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:2:3"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:0:3"
									},
									"scope": 271,
									"src": "422:65:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "623:32:3",
										"statements": [
											{
												"expression": {
													"id": 196,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "641:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 195,
												"id": 197,
												"nodeType": "Return",
												"src": "634:13:3"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "495:67:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "577:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:2:3"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "614:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:9:3"
									},
									"scope": 271,
									"src": "568:87:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "769:99:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 203,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "788:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "788:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 205,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "799:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "799:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "788:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "813:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "780:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "780:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "780:68:3"
											},
											{
												"id": 211,
												"nodeType": "PlaceholderStatement",
												"src": "859:1:3"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "663:79:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 213,
									"name": "onlyOwner",
									"nameLocation": "757:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "766:2:3"
									},
									"src": "748:120:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1273:49:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1311:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1303:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1303:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1303:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "1284:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1284:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1284:30:3"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "876:337:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 217,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 216,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "1263:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1263:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1228:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1245:2:3"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1273:0:3"
									},
									"scope": 271,
									"src": "1219:103:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "1547:131:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 236,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "1566:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1586:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1578:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 237,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1578:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1578:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1566:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1590:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1558:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1558:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "1558:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "1661:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "1642:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1642:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "1642:28:3"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1330:141:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 233,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 232,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "1537:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1537:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1486:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1512:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1504:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1504:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1503:18:3"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1547:0:3"
									},
									"scope": 271,
									"src": "1477:201:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "1901:128:3",
										"statements": [
											{
												"assignments": [
													257
												],
												"declarations": [
													{
														"constant": false,
														"id": 257,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1920:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 269,
														"src": "1912:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 256,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1912:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 259,
												"initialValue": {
													"id": 258,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "1931:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1912:25:3"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1948:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "1957:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1948:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1948:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 265,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2002:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 266,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "2012:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 264,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "1981:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "EmitStatement",
												"src": "1976:45:3"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "1686:146:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1847:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1874:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "1866:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:18:3"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1901:0:3"
									},
									"scope": 271,
									"src": "1838:191:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 272,
							"src": "156:1876:3",
							"usedErrors": []
						}
					],
					"src": "101:1931:3"
				},
				"id": 3
			}
		}
	}
}