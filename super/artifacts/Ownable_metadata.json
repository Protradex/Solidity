{
	"compiler": {
		"version": "0.8.13+commit.abaa5c0e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"constructor": {
					"details": "Initializes the contract setting the deployer as the initial owner."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"KNS/super/Ownable.sol": "Ownable"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"KNS/super/Context.sol": {
			"keccak256": "0xb404829888978c2da845daa1eda5bfd9d109ff6d5dcdc29348c2109ae0d34f3d",
			"license": "MIT",
			"urls": [
				"bzz-raw://203f5931ddd28501c18ab5b8665014b2f3126f3453cf93227e882fba4f614253",
				"dweb:/ipfs/QmXw55pgAKQTPBsQaPUYC4FSUrhZXzMpdMtAcRg61CAbuM"
			]
		},
		"KNS/super/Ownable.sol": {
			"keccak256": "0xef09051d7e9a08ca438d4242e46b0d82db103c2ba239660c4339e8d5604b47ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://2494932786a9c18b5629091596420b6df3c4526f3d6af8637a050c15f37344e4",
				"dweb:/ipfs/QmZbiG3frUtyH5BNrAv5HfUBTmLhNuzduMcsLaEbmBGjxr"
			]
		}
	},
	"version": 1
}